/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cinesys.ui;

import com.cinesys.DAO.PhimDAO;
import com.cinesys.DAO.PhimDAO1;
import com.cinesys.DAO.ThongKeDAO;
import com.cinesys.DAO.VeDAO;
import com.cinesys.entity.Phim;
import com.cinesys.entity.PhimEntity;
import com.cinesys.entity.Ve1;
import com.cinesys.untils.Auth;
import com.cinesys.untils.DateHelper;
import com.cinesys.untils.MsgBox;
import com.cinesys.untils.XDate;
import com.cinesys.untils.catchException;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.BorderStyle;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.VerticalAlignment;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author tuanlva
 */
public class FormTrangChinhJFrame extends javax.swing.JFrame {

    /**
     * Creates new form FormTrangChinhJFrame
     */
    public FormTrangChinhJFrame() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblUser = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        pnlDangXuat = new javax.swing.JPanel();
        lblDangXuat = new javax.swing.JLabel();
        pnlBanVe = new javax.swing.JPanel();
        lblBanVe = new javax.swing.JLabel();
        pnlQuanLyPhim = new javax.swing.JPanel();
        lblQuanLyPhim = new javax.swing.JLabel();
        pnlQuanLyLichChieu = new javax.swing.JPanel();
        lblQuanLyLichChieu = new javax.swing.JLabel();
        pnlQLNhanVien = new javax.swing.JPanel();
        lblQuanLyNhanVien = new javax.swing.JLabel();
        pnlThongKeDoanhThu = new javax.swing.JPanel();
        lblThongKeDoanhThu = new javax.swing.JLabel();
        pnlQLVe = new javax.swing.JPanel();
        lblQuanLyVe = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        pnlBanVeForm = new javax.swing.JPanel();
        lblChuChay = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDanhSachPhim = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        lblHinhPhim = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        DateNgayXem = new com.toedter.calendar.JDateChooser();
        cboSuatChieu = new javax.swing.JComboBox<>();
        btnDatVe = new javax.swing.JButton();
        lblTenPhim = new javax.swing.JLabel();
        pnlQuanLyPhimForm = new javax.swing.JPanel();
        btnTaoMoi = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        txtNgayKT = new javax.swing.JTextField();
        lblNgayKT = new javax.swing.JLabel();
        txtNgayKC = new javax.swing.JTextField();
        lblNgayKC = new javax.swing.JLabel();
        lblNamSX = new javax.swing.JLabel();
        lblNamSX1 = new javax.swing.JLabel();
        txtQuocGia = new javax.swing.JTextField();
        lblAnhPhim = new javax.swing.JLabel();
        txtNamSX = new javax.swing.JTextField();
        lblDaoDien = new javax.swing.JLabel();
        txtDaoDien = new javax.swing.JTextField();
        lblNgayMua = new javax.swing.JLabel();
        txtNgayMua = new javax.swing.JTextField();
        lblTheLoai = new javax.swing.JLabel();
        txtTheLoai = new javax.swing.JTextField();
        lblTenPhim1 = new javax.swing.JLabel();
        txtTenPhim = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtMaPhim = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPhim = new javax.swing.JTable();
        txtTimKiem1 = new javax.swing.JTextField();
        lblTimKiem = new javax.swing.JLabel();
        btnXuatFileExcel = new javax.swing.JButton();
        pnlQLLichChieu = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbllc = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        cbxphongchieu = new javax.swing.JComboBox<>();
        cbxcachieu = new javax.swing.JComboBox<>();
        cbxtenphim = new javax.swing.JComboBox<>();
        txtngaychieu = new javax.swing.JTextField();
        btnxoa = new javax.swing.JButton();
        btnsua = new javax.swing.JButton();
        btnthem = new javax.swing.JButton();
        btnmoi = new javax.swing.JButton();
        btndau = new javax.swing.JButton();
        btnlui = new javax.swing.JButton();
        btncuoi = new javax.swing.JButton();
        btntoi = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        lbltenphim = new javax.swing.JLabel();
        lblngaychieu = new javax.swing.JLabel();
        lblgiochieu = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        lblanh = new javax.swing.JLabel();
        pnlQuanLyVe = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblVe = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        btnPrint = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(204, 0, 51));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/Home.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel2.setText("|");

        jLabel3.setFont(new java.awt.Font("Apple Braille", 0, 25)); // NOI18N
        jLabel3.setText("CGV CINEMA");

        lblUser.setFont(new java.awt.Font("Apple Symbols", 0, 20)); // NOI18N
        lblUser.setForeground(new java.awt.Color(255, 255, 255));
        lblUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/Male-user.png"))); // NOI18N
        lblUser.setText("Hello, Admin");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 25)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("X");
        jLabel4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 958, Short.MAX_VALUE)
                .addComponent(lblUser)
                .addGap(31, 31, 31)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUser)
                            .addComponent(jLabel4)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1410, 70));

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlDangXuat.setBackground(new java.awt.Color(0, 0, 0));
        pnlDangXuat.setForeground(new java.awt.Color(153, 153, 153));
        pnlDangXuat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnlDangXuat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlDangXuatMouseClicked(evt);
            }
        });

        lblDangXuat.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblDangXuat.setForeground(new java.awt.Color(204, 0, 51));
        lblDangXuat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/Sign-out.png"))); // NOI18N
        lblDangXuat.setText("    Đăng Xuất");

        javax.swing.GroupLayout pnlDangXuatLayout = new javax.swing.GroupLayout(pnlDangXuat);
        pnlDangXuat.setLayout(pnlDangXuatLayout);
        pnlDangXuatLayout.setHorizontalGroup(
            pnlDangXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDangXuatLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(lblDangXuat)
                .addContainerGap(117, Short.MAX_VALUE))
        );
        pnlDangXuatLayout.setVerticalGroup(
            pnlDangXuatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDangXuatLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(lblDangXuat)
                .addGap(14, 14, 14))
        );

        jPanel3.add(pnlDangXuat, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 700, 300, 60));

        pnlBanVe.setBackground(new java.awt.Color(0, 0, 0));
        pnlBanVe.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnlBanVe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlBanVeMouseClicked(evt);
            }
        });

        lblBanVe.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblBanVe.setForeground(new java.awt.Color(204, 0, 51));
        lblBanVe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/Tickets.png"))); // NOI18N
        lblBanVe.setText("    Bán Vé");

        javax.swing.GroupLayout pnlBanVeLayout = new javax.swing.GroupLayout(pnlBanVe);
        pnlBanVe.setLayout(pnlBanVeLayout);
        pnlBanVeLayout.setHorizontalGroup(
            pnlBanVeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBanVeLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(lblBanVe)
                .addContainerGap(144, Short.MAX_VALUE))
        );
        pnlBanVeLayout.setVerticalGroup(
            pnlBanVeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBanVeLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblBanVe)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel3.add(pnlBanVe, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 300, 60));

        pnlQuanLyPhim.setBackground(new java.awt.Color(51, 51, 51));
        pnlQuanLyPhim.setForeground(new java.awt.Color(153, 153, 153));
        pnlQuanLyPhim.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnlQuanLyPhim.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlQuanLyPhimMouseClicked(evt);
            }
        });

        lblQuanLyPhim.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblQuanLyPhim.setForeground(new java.awt.Color(153, 153, 153));
        lblQuanLyPhim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/Movie.png"))); // NOI18N
        lblQuanLyPhim.setText("    Quản Lý Phim");

        javax.swing.GroupLayout pnlQuanLyPhimLayout = new javax.swing.GroupLayout(pnlQuanLyPhim);
        pnlQuanLyPhim.setLayout(pnlQuanLyPhimLayout);
        pnlQuanLyPhimLayout.setHorizontalGroup(
            pnlQuanLyPhimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuanLyPhimLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(lblQuanLyPhim)
                .addContainerGap(87, Short.MAX_VALUE))
        );
        pnlQuanLyPhimLayout.setVerticalGroup(
            pnlQuanLyPhimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlQuanLyPhimLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(lblQuanLyPhim)
                .addGap(14, 14, 14))
        );

        jPanel3.add(pnlQuanLyPhim, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 300, 60));

        pnlQuanLyLichChieu.setBackground(new java.awt.Color(51, 51, 51));
        pnlQuanLyLichChieu.setForeground(new java.awt.Color(153, 153, 153));
        pnlQuanLyLichChieu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnlQuanLyLichChieu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlQuanLyLichChieuMouseClicked(evt);
            }
        });

        lblQuanLyLichChieu.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblQuanLyLichChieu.setForeground(new java.awt.Color(153, 153, 153));
        lblQuanLyLichChieu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/Schedule1.png"))); // NOI18N
        lblQuanLyLichChieu.setText("    Quản Lý Lịch Chiếu");

        javax.swing.GroupLayout pnlQuanLyLichChieuLayout = new javax.swing.GroupLayout(pnlQuanLyLichChieu);
        pnlQuanLyLichChieu.setLayout(pnlQuanLyLichChieuLayout);
        pnlQuanLyLichChieuLayout.setHorizontalGroup(
            pnlQuanLyLichChieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuanLyLichChieuLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(lblQuanLyLichChieu)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        pnlQuanLyLichChieuLayout.setVerticalGroup(
            pnlQuanLyLichChieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlQuanLyLichChieuLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(lblQuanLyLichChieu)
                .addGap(14, 14, 14))
        );

        jPanel3.add(pnlQuanLyLichChieu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 300, 60));

        pnlQLNhanVien.setBackground(new java.awt.Color(51, 51, 51));
        pnlQLNhanVien.setForeground(new java.awt.Color(153, 153, 153));
        pnlQLNhanVien.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnlQLNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlQLNhanVienMouseClicked(evt);
            }
        });

        lblQuanLyNhanVien.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblQuanLyNhanVien.setForeground(new java.awt.Color(153, 153, 153));
        lblQuanLyNhanVien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/Client-management.png"))); // NOI18N
        lblQuanLyNhanVien.setText("    Quản Lý Nhân Viên");

        javax.swing.GroupLayout pnlQLNhanVienLayout = new javax.swing.GroupLayout(pnlQLNhanVien);
        pnlQLNhanVien.setLayout(pnlQLNhanVienLayout);
        pnlQLNhanVienLayout.setHorizontalGroup(
            pnlQLNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQLNhanVienLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(lblQuanLyNhanVien)
                .addContainerGap(39, Short.MAX_VALUE))
        );
        pnlQLNhanVienLayout.setVerticalGroup(
            pnlQLNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlQLNhanVienLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(lblQuanLyNhanVien)
                .addGap(14, 14, 14))
        );

        jPanel3.add(pnlQLNhanVien, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 300, 60));

        pnlThongKeDoanhThu.setBackground(new java.awt.Color(51, 51, 51));
        pnlThongKeDoanhThu.setForeground(new java.awt.Color(153, 153, 153));
        pnlThongKeDoanhThu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnlThongKeDoanhThu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlThongKeDoanhThuMouseClicked(evt);
            }
        });

        lblThongKeDoanhThu.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblThongKeDoanhThu.setForeground(new java.awt.Color(153, 153, 153));
        lblThongKeDoanhThu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/Statistics.png"))); // NOI18N
        lblThongKeDoanhThu.setText("    Thống Kê Doanh Thu");

        javax.swing.GroupLayout pnlThongKeDoanhThuLayout = new javax.swing.GroupLayout(pnlThongKeDoanhThu);
        pnlThongKeDoanhThu.setLayout(pnlThongKeDoanhThuLayout);
        pnlThongKeDoanhThuLayout.setHorizontalGroup(
            pnlThongKeDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongKeDoanhThuLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(lblThongKeDoanhThu)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        pnlThongKeDoanhThuLayout.setVerticalGroup(
            pnlThongKeDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlThongKeDoanhThuLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(lblThongKeDoanhThu)
                .addGap(14, 14, 14))
        );

        jPanel3.add(pnlThongKeDoanhThu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 360, 300, 60));

        pnlQLVe.setBackground(new java.awt.Color(51, 51, 51));
        pnlQLVe.setForeground(new java.awt.Color(153, 153, 153));
        pnlQLVe.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnlQLVe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlQLVeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlQLVeMouseEntered(evt);
            }
        });

        lblQuanLyVe.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblQuanLyVe.setForeground(new java.awt.Color(153, 153, 153));
        lblQuanLyVe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/Ticketss.png"))); // NOI18N
        lblQuanLyVe.setText("    Quản Lý Vé");

        javax.swing.GroupLayout pnlQLVeLayout = new javax.swing.GroupLayout(pnlQLVe);
        pnlQLVe.setLayout(pnlQLVeLayout);
        pnlQLVeLayout.setHorizontalGroup(
            pnlQLVeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQLVeLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(lblQuanLyVe)
                .addContainerGap(110, Short.MAX_VALUE))
        );
        pnlQLVeLayout.setVerticalGroup(
            pnlQLVeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlQLVeLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(lblQuanLyVe)
                .addGap(14, 14, 14))
        );

        jPanel3.add(pnlQLVe, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 300, 60));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 300, 760));

        jLayeredPane1.setLayout(new java.awt.CardLayout());

        pnlBanVeForm.setBackground(new java.awt.Color(255, 255, 255));

        lblChuChay.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        lblChuChay.setText("ngày 30/12/2021 ra mắt phim mới giảm giá 10%.....................");

        txtTimKiem.setText("Tìm kiếm");
        txtTimKiem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTimKiemFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTimKiemFocusLost(evt);
            }
        });
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        tblDanhSachPhim.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên phim", "Đạo diễn", "Thời lượng", "Ngày khời chiếu", "Tình trạng"
            }
        ));
        tblDanhSachPhim.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhSachPhimMouseClicked(evt);
            }
        });
        tblDanhSachPhim.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblDanhSachPhimKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblDanhSachPhim);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/Search.png"))); // NOI18N

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        lblHinhPhim.setBackground(new java.awt.Color(255, 255, 255));
        lblHinhPhim.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHinhPhim.setText("Hình ảnh");
        lblHinhPhim.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel13.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel13.setText("Ngày:");

        jLabel14.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel14.setText("Suất chiếu:");

        DateNgayXem.setBackground(new java.awt.Color(255, 255, 255));

        cboSuatChieu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cboSuatChieuMousePressed(evt);
            }
        });

        btnDatVe.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        btnDatVe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/Booking-Ticket.png"))); // NOI18N
        btnDatVe.setText("Đặt Vé");
        btnDatVe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDatVeActionPerformed(evt);
            }
        });

        lblTenPhim.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        lblTenPhim.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTenPhim.setText("Bố Già");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(btnDatVe)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DateNgayXem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboSuatChieu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(6, 6, 6))))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblTenPhim, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblHinhPhim, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(lblHinhPhim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTenPhim)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel13))
                    .addComponent(DateNgayXem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(cboSuatChieu, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDatVe)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlBanVeFormLayout = new javax.swing.GroupLayout(pnlBanVeForm);
        pnlBanVeForm.setLayout(pnlBanVeFormLayout);
        pnlBanVeFormLayout.setHorizontalGroup(
            pnlBanVeFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBanVeFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBanVeFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblChuChay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlBanVeFormLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(pnlBanVeFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlBanVeFormLayout.createSequentialGroup()
                                .addComponent(txtTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 679, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 701, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlBanVeFormLayout.setVerticalGroup(
            pnlBanVeFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBanVeFormLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblChuChay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlBanVeFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBanVeFormLayout.createSequentialGroup()
                        .addGroup(pnlBanVeFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 669, Short.MAX_VALUE))
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLayeredPane1.add(pnlBanVeForm, "card2");

        pnlQuanLyPhimForm.setBackground(new java.awt.Color(255, 255, 255));

        btnTaoMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/Refresh.png"))); // NOI18N
        btnTaoMoi.setText("Tạo mới");
        btnTaoMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoMoiActionPerformed(evt);
            }
        });

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/Edit.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/Delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/Add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        lblNgayKT.setText("Ngày Kết thúc:");

        lblNgayKC.setText("Ngày Khởi Chiếu:");

        lblNamSX.setText("Năm SX:");

        lblNamSX1.setText("Quốc gia:");

        txtQuocGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuocGiaActionPerformed(evt);
            }
        });

        lblAnhPhim.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAnhPhim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/img/Default.png"))); // NOI18N
        lblAnhPhim.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAnhPhimMouseClicked(evt);
            }
        });

        lblDaoDien.setText("Đao diễn:");

        lblNgayMua.setText("Ngày mua:");

        lblTheLoai.setText("Thể loại:");

        lblTenPhim1.setText("Tên phim:");

        jLabel5.setText("Mã phim:");

        tblPhim.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Phim", "Tên Phim", "Thể loại", "Hình ảnh", "Ngày mua", "Đạo diễn", "Năm SX", "Quốc gia", "Ngay KC", "Ngày KT"
            }
        ));
        tblPhim.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPhimMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblPhim);

        txtTimKiem1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiem1KeyReleased(evt);
            }
        });

        lblTimKiem.setText("Tìm kiếm:");

        btnXuatFileExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/Excel.png"))); // NOI18N
        btnXuatFileExcel.setText("Xuất file Excel");
        btnXuatFileExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatFileExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlQuanLyPhimFormLayout = new javax.swing.GroupLayout(pnlQuanLyPhimForm);
        pnlQuanLyPhimForm.setLayout(pnlQuanLyPhimFormLayout);
        pnlQuanLyPhimFormLayout.setHorizontalGroup(
            pnlQuanLyPhimFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuanLyPhimFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlQuanLyPhimFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlQuanLyPhimFormLayout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addGroup(pnlQuanLyPhimFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlQuanLyPhimFormLayout.createSequentialGroup()
                                .addGroup(pnlQuanLyPhimFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblNamSX)
                                    .addComponent(lblDaoDien)
                                    .addComponent(lblNamSX1)
                                    .addComponent(lblNgayKC)
                                    .addComponent(lblNgayKT)
                                    .addComponent(lblNgayMua))
                                .addGroup(pnlQuanLyPhimFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlQuanLyPhimFormLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(pnlQuanLyPhimFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtQuocGia, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtNamSX, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtNgayKC, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtNgayKT, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(pnlQuanLyPhimFormLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(pnlQuanLyPhimFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtNgayMua, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtDaoDien, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(pnlQuanLyPhimFormLayout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(pnlQuanLyPhimFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlQuanLyPhimFormLayout.createSequentialGroup()
                                        .addComponent(lblTheLoai)
                                        .addGap(10, 10, 10))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlQuanLyPhimFormLayout.createSequentialGroup()
                                        .addGroup(pnlQuanLyPhimFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel5)
                                            .addComponent(lblTenPhim1))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(pnlQuanLyPhimFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtTenPhim, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMaPhim, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTheLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(lblAnhPhim, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1085, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlQuanLyPhimFormLayout.createSequentialGroup()
                        .addComponent(lblTimKiem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTimKiem1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlQuanLyPhimFormLayout.createSequentialGroup()
                        .addComponent(btnThem)
                        .addGap(6, 6, 6)
                        .addComponent(btnXoa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSua)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTaoMoi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnXuatFileExcel)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        pnlQuanLyPhimFormLayout.setVerticalGroup(
            pnlQuanLyPhimFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuanLyPhimFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlQuanLyPhimFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlQuanLyPhimFormLayout.createSequentialGroup()
                        .addGroup(pnlQuanLyPhimFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtMaPhim, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlQuanLyPhimFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTenPhim1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTenPhim, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlQuanLyPhimFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTheLoai)
                            .addComponent(txtTheLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlQuanLyPhimFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNgayMua, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNgayMua))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlQuanLyPhimFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDaoDien)
                            .addComponent(txtDaoDien, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlQuanLyPhimFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNamSX)
                            .addComponent(txtNamSX, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlQuanLyPhimFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNamSX1)
                            .addComponent(txtQuocGia, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlQuanLyPhimFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNgayKC)
                            .addComponent(txtNgayKC, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlQuanLyPhimFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNgayKT)
                            .addComponent(txtNgayKT, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblAnhPhim, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlQuanLyPhimFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiem1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimKiem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlQuanLyPhimFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnXoa)
                    .addComponent(btnSua)
                    .addComponent(btnTaoMoi)
                    .addComponent(btnXuatFileExcel))
                .addContainerGap())
        );

        jLayeredPane1.add(pnlQuanLyPhimForm, "card3");

        pnlQLLichChieu.setBackground(new java.awt.Color(255, 255, 255));
        pnlQLLichChieu.setLayout(null);

        tbllc.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tbllc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "", "", ""},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "MaLC", "Ngày Chiếu", "Phòng", "Ca chiếu"
            }
        ));
        tbllc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbllcMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbllc);

        pnlQLLichChieu.add(jScrollPane4);
        jScrollPane4.setBounds(130, 330, 560, 120);

        jLabel18.setFont(new java.awt.Font("DialogInput", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Ngày chiếu");
        pnlQLLichChieu.add(jLabel18);
        jLabel18.setBounds(140, 100, 100, 30);

        jLabel19.setFont(new java.awt.Font("DialogInput", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Phòng Chiếu");
        pnlQLLichChieu.add(jLabel19);
        jLabel19.setBounds(150, 150, 110, 30);

        jLabel20.setFont(new java.awt.Font("DialogInput", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Tên Phim");
        pnlQLLichChieu.add(jLabel20);
        jLabel20.setBounds(150, 50, 80, 30);

        jLabel16.setFont(new java.awt.Font("DialogInput", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Chọn ca chiếu");
        pnlQLLichChieu.add(jLabel16);
        jLabel16.setBounds(150, 200, 120, 30);

        pnlQLLichChieu.add(cbxphongchieu);
        cbxphongchieu.setBounds(280, 150, 100, 30);

        pnlQLLichChieu.add(cbxcachieu);
        cbxcachieu.setBounds(280, 200, 180, 30);

        pnlQLLichChieu.add(cbxtenphim);
        cbxtenphim.setBounds(280, 50, 240, 30);
        pnlQLLichChieu.add(txtngaychieu);
        txtngaychieu.setBounds(280, 100, 170, 30);

        btnxoa.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnxoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/xóa.png"))); // NOI18N
        btnxoa.setText("Xóa");
        btnxoa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnxoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnxoaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnxoaMouseExited(evt);
            }
        });
        btnxoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoaActionPerformed(evt);
            }
        });
        pnlQLLichChieu.add(btnxoa);
        btnxoa.setBounds(590, 200, 100, 40);

        btnsua.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnsua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/Sửa.png"))); // NOI18N
        btnsua.setText("Sửa");
        btnsua.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnsua.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnsuaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnsuaMouseExited(evt);
            }
        });
        btnsua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuaActionPerformed(evt);
            }
        });
        pnlQLLichChieu.add(btnsua);
        btnsua.setBounds(590, 150, 100, 40);

        btnthem.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnthem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/thêm.png"))); // NOI18N
        btnthem.setText("Thêm");
        btnthem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnthem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnthemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnthemMouseExited(evt);
            }
        });
        btnthem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemActionPerformed(evt);
            }
        });
        pnlQLLichChieu.add(btnthem);
        btnthem.setBounds(590, 100, 100, 40);

        btnmoi.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnmoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/mới.png"))); // NOI18N
        btnmoi.setText("Mới");
        btnmoi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnmoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnmoiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnmoiMouseExited(evt);
            }
        });
        btnmoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmoiActionPerformed(evt);
            }
        });
        pnlQLLichChieu.add(btnmoi);
        btnmoi.setBounds(590, 50, 100, 40);

        btndau.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btndau.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/dau.png"))); // NOI18N
        btndau.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btndau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btndauMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btndauMouseExited(evt);
            }
        });
        btndau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndauActionPerformed(evt);
            }
        });
        pnlQLLichChieu.add(btndau);
        btndau.setBounds(170, 270, 100, 40);

        btnlui.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnlui.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/lui.png"))); // NOI18N
        btnlui.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnlui.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnluiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnluiMouseExited(evt);
            }
        });
        btnlui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnluiActionPerformed(evt);
            }
        });
        pnlQLLichChieu.add(btnlui);
        btnlui.setBounds(310, 270, 70, 40);

        btncuoi.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btncuoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/cuoi.png"))); // NOI18N
        btncuoi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btncuoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btncuoiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btncuoiMouseExited(evt);
            }
        });
        btncuoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncuoiActionPerformed(evt);
            }
        });
        pnlQLLichChieu.add(btncuoi);
        btncuoi.setBounds(520, 270, 100, 40);

        btntoi.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btntoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/toi.png"))); // NOI18N
        btntoi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btntoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btntoiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btntoiMouseExited(evt);
            }
        });
        btntoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntoiActionPerformed(evt);
            }
        });
        pnlQLLichChieu.add(btntoi);
        btntoi.setBounds(410, 270, 70, 40);

        jLabel6.setFont(new java.awt.Font("DialogInput", 2, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("(Năm-tháng-ngày)");
        pnlQLLichChieu.add(jLabel6);
        jLabel6.setBounds(460, 110, 120, 14);

        lbltenphim.setFont(new java.awt.Font("Ink Free", 1, 36)); // NOI18N
        lbltenphim.setForeground(new java.awt.Color(255, 255, 255));
        lbltenphim.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltenphim.setText("Squid Game");
        pnlQLLichChieu.add(lbltenphim);
        lbltenphim.setBounds(210, 460, 400, 50);

        lblngaychieu.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        lblngaychieu.setForeground(new java.awt.Color(255, 255, 255));
        lblngaychieu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblngaychieu.setText("Ngày chiếu rạp : 26/02/2021");
        pnlQLLichChieu.add(lblngaychieu);
        lblngaychieu.setBounds(240, 550, 340, 20);

        lblgiochieu.setFont(new java.awt.Font("DialogInput", 2, 16)); // NOI18N
        lblgiochieu.setForeground(new java.awt.Color(255, 255, 255));
        lblgiochieu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblgiochieu.setText("Giờ chiếu : 18:30:00");
        pnlQLLichChieu.add(lblgiochieu);
        lblgiochieu.setBounds(280, 520, 260, 20);

        jLabel7.setOpaque(true);
        pnlQLLichChieu.add(jLabel7);
        jLabel7.setBounds(170, 450, 480, 140);

        jLabel17.setOpaque(true);
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel17MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel17MouseExited(evt);
            }
        });
        pnlQLLichChieu.add(jLabel17);
        jLabel17.setBounds(0, 0, 780, 760);

        lblanh.setMaximumSize(new java.awt.Dimension(800, 665));
        lblanh.setMinimumSize(new java.awt.Dimension(800, 665));
        lblanh.setPreferredSize(new java.awt.Dimension(800, 665));
        pnlQLLichChieu.add(lblanh);
        lblanh.setBounds(0, 0, 800, 640);

        jLayeredPane1.add(pnlQLLichChieu, "card4");

        pnlQuanLyVe.setLayout(null);

        tblVe.setBackground(new java.awt.Color(102, 255, 204));
        tblVe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Vé", "Gía Vé", "Ngày Mua", "Mã Ghế", "Mã KH", "Mã NV", "Mã SC", "Mã Phim"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblVe);

        pnlQuanLyVe.add(jScrollPane3);
        jScrollPane3.setBounds(30, 100, 1070, 620);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Tìm Kiếm")));

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlQuanLyVe.add(jPanel5);
        jPanel5.setBounds(30, 6, 750, 80);

        btnPrint.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/Excel.png"))); // NOI18N
        btnPrint.setText("Xuất file");
        btnPrint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPrintMouseClicked(evt);
            }
        });
        pnlQuanLyVe.add(btnPrint);
        btnPrint.setBounds(30, 720, 140, 40);

        btnUpdate.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/Refresh.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        pnlQuanLyVe.add(btnUpdate);
        btnUpdate.setBounds(840, 720, 120, 36);

        btnDelete.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cinesys/icon/Delete.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        pnlQuanLyVe.add(btnDelete);
        btnDelete.setBounds(980, 720, 110, 36);

        jLayeredPane1.add(pnlQuanLyVe, "card5");

        jPanel1.add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 70, 1120, 760));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1410, 830));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel4MouseClicked

    private void pnlQuanLyPhimMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlQuanLyPhimMouseClicked
        setStatusColor(lblQuanLyPhim);
        this.Content(pnlQuanLyPhimForm);
        this.initPhim();
    }//GEN-LAST:event_pnlQuanLyPhimMouseClicked

    private void pnlBanVeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlBanVeMouseClicked
        setStatusColor(lblBanVe);
        this.Content(pnlBanVeForm);
        initBanVe();
    }//GEN-LAST:event_pnlBanVeMouseClicked

    private void pnlQuanLyLichChieuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlQuanLyLichChieuMouseClicked
        setStatusColor(lblQuanLyLichChieu);
        QuanLiLichChieu QLLC = new QuanLiLichChieu();
        QLLC.setVisible(true);
    }//GEN-LAST:event_pnlQuanLyLichChieuMouseClicked

    private void pnlQLNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlQLNhanVienMouseClicked
        setStatusColor(lblQuanLyNhanVien);
    }//GEN-LAST:event_pnlQLNhanVienMouseClicked

    private void pnlThongKeDoanhThuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlThongKeDoanhThuMouseClicked
        setStatusColor(lblThongKeDoanhThu);
        ThongKe tk = new ThongKe();
        tk.setVisible(true);
    }//GEN-LAST:event_pnlThongKeDoanhThuMouseClicked

    private void pnlDangXuatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDangXuatMouseClicked
        this.dispose();
        this.openDangNhap();
    }//GEN-LAST:event_pnlDangXuatMouseClicked

    private void txtQuocGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuocGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuocGiaActionPerformed

    private void btnXuatFileExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatFileExcelActionPerformed
        // TODO add your handling code here:
        writeExcel();
    }//GEN-LAST:event_btnXuatFileExcelActionPerformed

    private void btnTaoMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoMoiActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_btnTaoMoiActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        try {
            // TODO add your handling code here:
            sua();
        } catch (ParseException ex) {
            throw new RuntimeException(ex);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        try {
            // TODO add your handling code here:
            xoa();
        } catch (SQLException ex) {
            throw new RuntimeException("Xóa không thành công");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        try {
            // TODO add your handling code here:
            them();
        } catch (ParseException ex) {
            throw new RuntimeException(ex);
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void tblPhimMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPhimMouseClicked
        // TODO add your handling code here:
        setForm();
        this.setStatus(false);
////        if (evt.getClickCount() == 2) {
//        this.index = tblPhim.rowAtPoint(evt.getPoint());
//        String imageName = String.valueOf(tblPhim.getValueAt(this.index, 3));
//        lblAnhPhim.setToolTipText(imageName);
//        showImage(imageName);
////        }
    }//GEN-LAST:event_tblPhimMouseClicked

    private void txtTimKiem1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiem1KeyReleased
        // TODO add your handling code here:
        loadforsearch();
    }//GEN-LAST:event_txtTimKiem1KeyReleased

    private void btnxoaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnxoaMouseEntered
        btnxoa.setBackground(new Color(240, 199, 130, 100));
    }//GEN-LAST:event_btnxoaMouseEntered

    private void btnxoaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnxoaMouseExited
        btnxoa.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_btnxoaMouseExited

    private void btnxoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoaActionPerformed
//        delete();
    }//GEN-LAST:event_btnxoaActionPerformed

    private void btndauMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btndauMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btndauMouseEntered

    private void btndauMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btndauMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btndauMouseExited

    private void btndauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndauActionPerformed
//        dau();
    }//GEN-LAST:event_btndauActionPerformed

    private void btnsuaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnsuaMouseEntered
        btnsua.setBackground(new Color(240, 199, 130, 100));
    }//GEN-LAST:event_btnsuaMouseEntered

    private void btnsuaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnsuaMouseExited
        btnsua.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_btnsuaMouseExited

    private void btnsuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuaActionPerformed
//        update();
    }//GEN-LAST:event_btnsuaActionPerformed

    private void btnluiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnluiMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnluiMouseEntered

    private void btnluiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnluiMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnluiMouseExited

    private void btnluiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnluiActionPerformed
//        lui();
    }//GEN-LAST:event_btnluiActionPerformed

    private void btncuoiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btncuoiMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btncuoiMouseEntered

    private void btncuoiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btncuoiMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btncuoiMouseExited

    private void btncuoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncuoiActionPerformed
//        cuoi();
    }//GEN-LAST:event_btncuoiActionPerformed

    private void jLabel17MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseEntered

    }//GEN-LAST:event_jLabel17MouseEntered

    private void jLabel17MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseExited

    }//GEN-LAST:event_jLabel17MouseExited

    private void btnthemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnthemMouseEntered
        btnthem.setBackground(new Color(240, 199, 130, 100));
    }//GEN-LAST:event_btnthemMouseEntered

    private void btnthemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnthemMouseExited
        btnthem.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_btnthemMouseExited

    private void btnthemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemActionPerformed
//        insert();
    }//GEN-LAST:event_btnthemActionPerformed

    private void btnmoiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmoiMouseEntered
        btnmoi.setBackground(new Color(240, 199, 130, 100));
    }//GEN-LAST:event_btnmoiMouseEntered

    private void btnmoiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmoiMouseExited
        btnmoi.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_btnmoiMouseExited

    private void btnmoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmoiActionPerformed
//        defaultForm();
    }//GEN-LAST:event_btnmoiActionPerformed

    private void btntoiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btntoiMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btntoiMouseEntered

    private void btntoiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btntoiMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btntoiMouseExited

    private void btntoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntoiActionPerformed
//        toi();
    }//GEN-LAST:event_btntoiActionPerformed

    private void tbllcMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbllcMouseClicked
//        clickRow();
    }//GEN-LAST:event_tbllcMouseClicked

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        this.fillTableVe();
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnPrintMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPrintMouseClicked
        // TODO add your handling code here:
        this.xuatFile();
    }//GEN-LAST:event_btnPrintMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        this.updateQLVe();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        this.deleteQLVe();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void pnlQLVeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlQLVeMouseClicked
        this.setStatusColor(lblQuanLyVe);
        this.Content(pnlQuanLyVe);
        this.initQLVE();
    }//GEN-LAST:event_pnlQLVeMouseClicked

    private void pnlQLVeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlQLVeMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_pnlQLVeMouseEntered

    private void btnDatVeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDatVeActionPerformed
        this.openDatVe();
    }//GEN-LAST:event_btnDatVeActionPerformed

    private void cboSuatChieuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboSuatChieuMousePressed
        String ten = lblTenPhim.getText();
        this.fillComboBox(ten);
    }//GEN-LAST:event_cboSuatChieuMousePressed

    private void tblDanhSachPhimMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachPhimMouseClicked
        this.fillInfor();
    }//GEN-LAST:event_tblDanhSachPhimMouseClicked

    private void tblDanhSachPhimKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblDanhSachPhimKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            fillInfor();
        }
    }//GEN-LAST:event_tblDanhSachPhimKeyReleased

    private void txtTimKiemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemFocusGained
        if (txtTimKiem.getText().trim().toLowerCase().equals("tìm kiếm")) {
            txtTimKiem.setText("");
            txtTimKiem.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtTimKiemFocusGained

    private void txtTimKiemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemFocusLost
        String timKiem = txtTimKiem.getText().trim().toLowerCase();
        if (timKiem.equals("") || timKiem.equals("tìm kiếm")) {
            txtTimKiem.setText("Tìm kiếm");
            txtTimKiem.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtTimKiemFocusLost

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        this.fillTableDatVe();
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void lblAnhPhimMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAnhPhimMouseClicked
        this.selectImage();
    }//GEN-LAST:event_lblAnhPhimMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormTrangChinhJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormTrangChinhJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormTrangChinhJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormTrangChinhJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormTrangChinhJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DateNgayXem;
    private javax.swing.JButton btnDatVe;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnTaoMoi;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXuatFileExcel;
    private javax.swing.JButton btncuoi;
    private javax.swing.JButton btndau;
    private javax.swing.JButton btnlui;
    private javax.swing.JButton btnmoi;
    private javax.swing.JButton btnsua;
    private javax.swing.JButton btnthem;
    private javax.swing.JButton btntoi;
    private javax.swing.JButton btnxoa;
    private javax.swing.JComboBox<String> cboSuatChieu;
    private javax.swing.JComboBox<String> cbxcachieu;
    private javax.swing.JComboBox<String> cbxphongchieu;
    private javax.swing.JComboBox<String> cbxtenphim;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblAnhPhim;
    private javax.swing.JLabel lblBanVe;
    private javax.swing.JLabel lblChuChay;
    private javax.swing.JLabel lblDangXuat;
    private javax.swing.JLabel lblDaoDien;
    private javax.swing.JLabel lblHinhPhim;
    private javax.swing.JLabel lblNamSX;
    private javax.swing.JLabel lblNamSX1;
    private javax.swing.JLabel lblNgayKC;
    private javax.swing.JLabel lblNgayKT;
    private javax.swing.JLabel lblNgayMua;
    private javax.swing.JLabel lblQuanLyLichChieu;
    private javax.swing.JLabel lblQuanLyNhanVien;
    private javax.swing.JLabel lblQuanLyPhim;
    private javax.swing.JLabel lblQuanLyVe;
    private javax.swing.JLabel lblTenPhim;
    private javax.swing.JLabel lblTenPhim1;
    private javax.swing.JLabel lblTheLoai;
    private javax.swing.JLabel lblThongKeDoanhThu;
    private javax.swing.JLabel lblTimKiem;
    private javax.swing.JLabel lblUser;
    private javax.swing.JLabel lblanh;
    private javax.swing.JLabel lblgiochieu;
    private javax.swing.JLabel lblngaychieu;
    private javax.swing.JLabel lbltenphim;
    private javax.swing.JPanel pnlBanVe;
    private javax.swing.JPanel pnlBanVeForm;
    private javax.swing.JPanel pnlDangXuat;
    private javax.swing.JPanel pnlQLLichChieu;
    private javax.swing.JPanel pnlQLNhanVien;
    private javax.swing.JPanel pnlQLVe;
    private javax.swing.JPanel pnlQuanLyLichChieu;
    private javax.swing.JPanel pnlQuanLyPhim;
    private javax.swing.JPanel pnlQuanLyPhimForm;
    private javax.swing.JPanel pnlQuanLyVe;
    private javax.swing.JPanel pnlThongKeDoanhThu;
    private javax.swing.JTable tblDanhSachPhim;
    private javax.swing.JTable tblPhim;
    private javax.swing.JTable tblVe;
    private javax.swing.JTable tbllc;
    private javax.swing.JTextField txtDaoDien;
    private javax.swing.JTextField txtMaPhim;
    private javax.swing.JTextField txtNamSX;
    private javax.swing.JTextField txtNgayKC;
    private javax.swing.JTextField txtNgayKT;
    private javax.swing.JTextField txtNgayMua;
    private javax.swing.JTextField txtQuocGia;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTenPhim;
    private javax.swing.JTextField txtTheLoai;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JTextField txtTimKiem1;
    private javax.swing.JTextField txtngaychieu;
    // End of variables declaration//GEN-END:variables

    private void init() {
        this.setLocationRelativeTo(null);
        new FormChaoJDialog(this, true).setVisible(true);
        new LoginJDialogg(this, true).setVisible(true);
        initBanVe();
    }

    //Hàm đổi màu khi click vào menubar
    private void setStatusColor(JLabel lblMenu) {
        String menu = lblMenu.getText().trim().toLowerCase();
        switch (menu) {
            case "bán vé":
                pnlBanVe.setBackground(Color.black);
                lblMenu.setForeground(new Color(204, 0, 51));
                pnlQuanLyPhim.setBackground(new Color(51, 51, 51));
                lblQuanLyPhim.setForeground(new Color(153, 153, 153));
                pnlQuanLyLichChieu.setBackground(new Color(51, 51, 51));
                lblQuanLyLichChieu.setForeground(new Color(153, 153, 153));
                pnlQLNhanVien.setBackground(new Color(51, 51, 51));
                lblQuanLyNhanVien.setForeground(new Color(153, 153, 153));
                pnlThongKeDoanhThu.setBackground(new Color(51, 51, 51));
                lblThongKeDoanhThu.setForeground(new Color(153, 153, 153));
                pnlQLVe.setBackground(new Color(51, 51, 51));
                lblQuanLyVe.setForeground(new Color(153, 153, 153));
                break;
            case "quản lý phim":
                pnlQuanLyPhim.setBackground(Color.black);
                lblMenu.setForeground(new Color(204, 0, 51));
                pnlBanVe.setBackground(new Color(51, 51, 51));
                lblBanVe.setForeground(new Color(153, 153, 153));
                pnlQuanLyLichChieu.setBackground(new Color(51, 51, 51));
                lblQuanLyLichChieu.setForeground(new Color(153, 153, 153));
                pnlQLNhanVien.setBackground(new Color(51, 51, 51));
                lblQuanLyNhanVien.setForeground(new Color(153, 153, 153));
                pnlThongKeDoanhThu.setBackground(new Color(51, 51, 51));
                lblThongKeDoanhThu.setForeground(new Color(153, 153, 153));
                pnlQLVe.setBackground(new Color(51, 51, 51));
                lblQuanLyVe.setForeground(new Color(153, 153, 153));
                break;
            case "quản lý lịch chiếu":
                pnlQuanLyLichChieu.setBackground(Color.black);
                lblMenu.setForeground(new Color(204, 0, 51));
                pnlBanVe.setBackground(new Color(51, 51, 51));
                lblBanVe.setForeground(new Color(153, 153, 153));
                pnlQuanLyPhim.setBackground(new Color(51, 51, 51));
                lblQuanLyPhim.setForeground(new Color(153, 153, 153));
                pnlQLNhanVien.setBackground(new Color(51, 51, 51));
                lblQuanLyNhanVien.setForeground(new Color(153, 153, 153));
                pnlThongKeDoanhThu.setBackground(new Color(51, 51, 51));
                lblThongKeDoanhThu.setForeground(new Color(153, 153, 153));
                pnlQLVe.setBackground(new Color(51, 51, 51));
                lblQuanLyVe.setForeground(new Color(153, 153, 153));
                break;
            case "quản lý nhân viên":
                pnlQLNhanVien.setBackground(Color.black);
                lblMenu.setForeground(new Color(204, 0, 51));
                pnlBanVe.setBackground(new Color(51, 51, 51));
                lblBanVe.setForeground(new Color(153, 153, 153));
                pnlQuanLyLichChieu.setBackground(new Color(51, 51, 51));
                lblQuanLyLichChieu.setForeground(new Color(153, 153, 153));
                pnlQuanLyPhim.setBackground(new Color(51, 51, 51));
                lblQuanLyPhim.setForeground(new Color(153, 153, 153));
                pnlThongKeDoanhThu.setBackground(new Color(51, 51, 51));
                lblThongKeDoanhThu.setForeground(new Color(153, 153, 153));
                pnlQLVe.setBackground(new Color(51, 51, 51));
                lblQuanLyVe.setForeground(new Color(153, 153, 153));
                break;
            case "quản lý vé":
                pnlQLVe.setBackground(Color.black);
                lblMenu.setForeground(new Color(204, 0, 51));
                pnlBanVe.setBackground(new Color(51, 51, 51));
                lblBanVe.setForeground(new Color(153, 153, 153));
                pnlQuanLyLichChieu.setBackground(new Color(51, 51, 51));
                lblQuanLyLichChieu.setForeground(new Color(153, 153, 153));
                pnlQuanLyPhim.setBackground(new Color(51, 51, 51));
                lblQuanLyPhim.setForeground(new Color(153, 153, 153));
                pnlThongKeDoanhThu.setBackground(new Color(51, 51, 51));
                lblThongKeDoanhThu.setForeground(new Color(153, 153, 153));
                pnlQLNhanVien.setBackground(new Color(51, 51, 51));
                lblQuanLyNhanVien.setForeground(new Color(153, 153, 153));
                break;
            case "thống kê doanh thu":
                pnlThongKeDoanhThu.setBackground(Color.black);
                lblMenu.setForeground(new Color(204, 0, 51));
                pnlBanVe.setBackground(new Color(51, 51, 51));
                lblBanVe.setForeground(new Color(153, 153, 153));
                pnlQuanLyLichChieu.setBackground(new Color(51, 51, 51));
                lblQuanLyLichChieu.setForeground(new Color(153, 153, 153));
                pnlQLNhanVien.setBackground(new Color(51, 51, 51));
                lblQuanLyNhanVien.setForeground(new Color(153, 153, 153));
                pnlQuanLyPhim.setBackground(new Color(51, 51, 51));
                lblQuanLyPhim.setForeground(new Color(153, 153, 153));
                pnlQLVe.setBackground(new Color(51, 51, 51));
                lblQuanLyVe.setForeground(new Color(153, 153, 153));
                break;
        }
    }

    //Mở form đăng nhập
    private void openDangNhap() {
        new LoginJDialogg(this, true).setVisible(true);
    }

    public void Content(JPanel panel) {
        jLayeredPane1.removeAll();
        jLayeredPane1.add(panel);
        jLayeredPane1.repaint();
        jLayeredPane1.revalidate();
    }

    //Form Đặt vé
    PhimDAO phimdao = new PhimDAO();
    ThongKeDAO tkDAO = new ThongKeDAO();
    javax.swing.Timer t;
    private int row;
    public static List<Object[]> listLC = new ArrayList<>();

    private void initBanVe() {
        this.fillUser();
        //chạy chữ
        ActionListener a;
        a = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String lbl = lblChuChay.getText();
                lbl = lbl.substring(1, lbl.length()) + lbl.charAt(0);
                lblChuChay.setText(lbl);

            }

        };
        t = new javax.swing.Timer(1000, a);
        t.start();
        this.fillTableDatVe();
        tblDanhSachPhim.setRowSelectionInterval(0, 0);
        this.row = tblDanhSachPhim.getSelectedRow();
        this.fillInfor();
    }

    public void fillUser() {
        lblUser.setText("Tên: "+Auth.user.getTen());
    }
    
    public void fillTableDatVe() {
        tblDanhSachPhim.setSelectionMode(0);
        DefaultTableModel model = (DefaultTableModel) tblDanhSachPhim.getModel();
        model.setRowCount(0);
        List<Phim> listSelected = new ArrayList<>();
        String timKiem = txtTimKiem.getText().trim().toLowerCase();
        try {
            List<Phim> list = phimdao.selectAll();
            if (!timKiem.equals("tìm kiếm")) {
                for (int i = 0; i < list.size(); i++) {
                    Phim entity = list.get(i);
                    if (entity.getTenPhim().toLowerCase().contains(timKiem)) {
                        listSelected.add(entity);
                    } else if (entity.getDaoDien().toLowerCase().contains(timKiem)) {
                        listSelected.add(entity);
                    }
                }
            } else {
                listSelected = list;
            }

            for (Phim phim : listSelected) {
                Date ngayKC = phim.getNgayKhoiChieu();
                Object status;
                Date now = new Date();
                if (ngayKC.after(now)) {
                    status = "Chưa khởi chiếu";
                } else {
                    status = "Đang chiếu";
                }
                Object[] row = {
                    phim.getTenPhim(),
                    phim.getDaoDien(),
                    phim.getThoiLuong(),
                    phim.getNgayKhoiChieu(),
                    status,};
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi dữ liệu");
            throw new RuntimeException(e);
        }

    }

    public void fillInfor() {
        this.row = tblDanhSachPhim.getSelectedRow();
        String tenPhim = (String) tblDanhSachPhim.getValueAt(this.row, 0);
        try {
            Phim entity = phimdao.selectByPhim(tenPhim);
            this.setForm(entity);
            this.fillComboBox(entity.getTenPhim());
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }

    private void setForm(Phim entity) {
        ImageIcon image = new ImageIcon(entity.getHinhAnh());
        Image img = image.getImage();
        ImageIcon icon = new ImageIcon(img.getScaledInstance(lblHinhPhim.getWidth(), lblHinhPhim.getHeight(), img.SCALE_SMOOTH));
        lblHinhPhim.setText("");
        lblHinhPhim.setIcon(icon);
        lblTenPhim.setText(entity.getTenPhim());
        String trangThai = (String) tblDanhSachPhim.getValueAt(this.row, 4);
        if (trangThai.toLowerCase().equals("đang chiếu")) {
            DateNgayXem.setDate(new Date());
        } else {
            DateNgayXem.setDate(entity.getNgayKhoiChieu());
        }
    }

    private void fillComboBox(String tenPhim) {
        List<Object[]> list = tkDAO.getSuatChieu(tenPhim);
        String dateChooser = XDate.toString(DateNgayXem.getDate(), "yyyy-MM-dd");
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboSuatChieu.getModel();
        model.removeAllElements();
        for (Object[] obj : list) {
            String date = String.valueOf(obj[0]);
            if (dateChooser.equals(date)) {
                model.addElement(obj[1]);
            }
        }
    }

    public void openDatVe() {
        String tenP = lblTenPhim.getText();
        Date ngayChieu = DateNgayXem.getDate();
        Date suatChieu = (Date) cboSuatChieu.getSelectedItem();
        listLC = tkDAO.getSuatChieuRap(tenP, ngayChieu, suatChieu);
        new DatVeJDialog1(this, true).setVisible(true);
    }

    //Form Quản lý phim
    int index = 0;
    PhimDAO1 daoPhim = new PhimDAO1();

    void initPhim() {
        this.load();
        this.setStatus(true);
        lblAnhPhim.setToolTipText("Default.png");
    }

    void load() {
        DefaultTableModel model = (DefaultTableModel) tblPhim.getModel();
        model.setRowCount(0);
        try {
            List<PhimEntity> list = daoPhim.select();
            for (PhimEntity nh : list) {
                Object[] row = {
                    nh.getMaPhim(),
                    nh.getTenPhim(),
                    nh.getTheLoai(),
                    nh.getHinhAnh(),
                    nh.getNgayMua().toString(),
                    nh.getDaoDien(),
                    nh.getNamSX().toString(),
                    nh.getQuocGia(),
                    nh.getNgayKC().toString(),
                    nh.getNgayKT().toString()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
            e.printStackTrace();
        }
    }

    void loadforsearch() {
        try {
            List<PhimEntity> list = (List<PhimEntity>) daoPhim.findByTen(txtTimKiem1.getText());
            if (list.size() > 0) {
                DefaultTableModel model = (DefaultTableModel) tblPhim.getModel();
                model.setRowCount(0);
                for (PhimEntity nh : list) {
                    Object[] row = {
                        nh.getMaPhim(),
                        nh.getTenPhim(),
                        nh.getTheLoai(),
                        nh.getHinhAnh(),
                        nh.getNgayMua().toString(),
                        nh.getDaoDien(),
                        nh.getNamSX().toString(),
                        nh.getQuocGia(),
                        nh.getNgayKC().toString(),
                        nh.getNgayKT().toString()
                    };
                    model.addRow(row);
                }
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi không tìm thấy dữ liệu!");
        }
    }

    void them() throws ParseException {
        if (catchException.nullPoint(txtDaoDien.getText()) || catchException.nullPoint(txtMaPhim.getText())
                || catchException.nullPoint(txtNamSX.getText()) || catchException.nullPoint(txtNgayKC.getText())
                || catchException.nullPoint(txtNgayMua.getText()) || catchException.nullPoint(txtNgayKT.getText())
                || catchException.nullPoint(txtQuocGia.getText()) || catchException.nullPoint(txtTenPhim.getText())
                || catchException.nullPoint(txtTheLoai.getText())) {
            MsgBox.alert(this, "bạn chưa nhập thông tin");
        } else {
            PhimEntity model = getModel();
            try {
                daoPhim.insert(model);
                this.load();
                this.clear();
                MsgBox.alert(this, "Thêm mới thành công!");
            } catch (Exception e) {
                e.printStackTrace();
                MsgBox.alert(this, "Thêm mới thất bại!");
            }
        }
    }

    void sua() throws ParseException {
        if (catchException.nullPoint(txtDaoDien.getText()) || catchException.nullPoint(txtMaPhim.getText())
                || catchException.nullPoint(txtNamSX.getText()) || catchException.nullPoint(txtNgayKC.getText())
                || catchException.nullPoint(txtNgayMua.getText()) || catchException.nullPoint(txtNgayKT.getText())
                || catchException.nullPoint(txtQuocGia.getText()) || catchException.nullPoint(txtTenPhim.getText())
                || catchException.nullPoint(txtTheLoai.getText())) {
            MsgBox.alert(this, "bạn chưa nhập thông tin");
        } else {
            PhimEntity model = getModel();
            try {
                daoPhim.update(model);
                this.load();
                MsgBox.alert(this, "Cập nhật thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Cập nhật thất bại!");
            }
        }
    }

    void xoa() throws SQLException {
        if (catchException.nullPoint(txtDaoDien.getText()) || catchException.nullPoint(txtMaPhim.getText())
                || catchException.nullPoint(txtNamSX.getText()) || catchException.nullPoint(txtNgayKC.getText())
                || catchException.nullPoint(txtNgayMua.getText()) || catchException.nullPoint(txtNgayKT.getText())
                || catchException.nullPoint(txtQuocGia.getText()) || catchException.nullPoint(txtTenPhim.getText())
                || catchException.nullPoint(txtTheLoai.getText())) {
            MsgBox.alert(this, "bạn chưa nhập thông tin");
        } else {
            if (MsgBox.confirm(this, "Bạn thực sự muốn xóa phim này?")) {
                String maphim = txtMaPhim.getText();
                try {
                    daoPhim.delete(maphim);
                    this.load();
                    this.clear();
                    MsgBox.alert(this, "Xóa thành công!");
                } catch (HeadlessException e) {
                    MsgBox.alert(this, "Xóa thất bại!");
                }
            }
        }
    }

    void clear() {
        txtMaPhim.setText("");
        txtTenPhim.setText("");
        txtTheLoai.setText("");
//        lblAnhPhim.setText("");
        txtNgayMua.setText("");
        txtDaoDien.setText("");
        txtNamSX.setText("");
        txtQuocGia.setText("");
        txtNgayKC.setText("");
        txtNgayKT.setText("");
        txtTimKiem.setText("");
        showImage("Default.png");
        this.setStatus(true);
    }

    void edit() {
        try {
            String maphim = (String) tblPhim.getValueAt(this.index, 0);
            PhimEntity model = daoPhim.findById(maphim);
            if (model != null) {
                this.setModel(model);
                this.setStatus(false);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    void setModel(PhimEntity model) {
        txtMaPhim.setText(model.getMaPhim());
        txtTenPhim.setText(model.getTenPhim());
        txtTheLoai.setText(model.getTheLoai());
        lblAnhPhim.setToolTipText(model.getHinhAnh());
        System.out.println(model.getHinhAnh());
        ImageIcon image = new ImageIcon(model.getHinhAnh());
        Image img = image.getImage();
        ImageIcon icon = new ImageIcon(img.getScaledInstance(lblAnhPhim.getWidth(), lblAnhPhim.getHeight(), img.SCALE_SMOOTH));
        lblAnhPhim.setText("");
        lblAnhPhim.setIcon(icon);
        txtNgayMua.setText(DateHelper.toString(model.getNgayMua()));
        txtDaoDien.setText(model.getDaoDien());
        txtNamSX.setText(DateHelper.toString(model.getNamSX()));
        txtQuocGia.setText(model.getQuocGia());
        txtNgayKC.setText(DateHelper.toString(model.getNgayKC()));
        txtNgayKT.setText(DateHelper.toString(model.getNgayKT()));
    }

    // lưu dữ liệu từ text vào đối tượng tạm(model)
    PhimEntity getModel() throws ParseException {
        PhimEntity model = new PhimEntity();
        model.setMaPhim(txtMaPhim.getText());
        model.setTenPhim(txtTenPhim.getText());
        model.setTheLoai(txtTheLoai.getText());
        model.setHinhAnh("src/Img/"+lblAnhPhim.getToolTipText());
        model.setNgayMua(DateHelper.toDate(txtNgayMua.getText()));
        model.setDaoDien(txtDaoDien.getText());
        model.setNamSX(DateHelper.toDate(txtNamSX.getText()));
        model.setQuocGia(txtQuocGia.getText());
        model.setNgayKC(DateHelper.toDate(txtNgayKC.getText()));
        model.setNgayKT(DateHelper.toDate(txtNgayKT.getText()));
        return model;
    }

    void setStatus(boolean insertable) {
        txtMaPhim.setEditable(insertable);
        btnThem.setEnabled(insertable);
        btnSua.setEnabled(!insertable);
        btnXoa.setEnabled(!insertable);
        boolean first = this.index > 0;
        boolean last = this.index < tblPhim.getRowCount() - 1;
    }

    private void selectImage() {
        JFileChooser fc = new JFileChooser("src");
        FileFilter filter = new FileNameExtensionFilter("Image Files", "gif", "jpeg", "jpg", "png");
        fc.setFileFilter(filter);
        fc.setMultiSelectionEnabled(false);
        int kq = fc.showOpenDialog(fc);
        if (kq == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            Auth.saveLogo(file); // lưu hình vào thư mục đã xác định trong  ShareHelper.saveLogo()
            ImageIcon image = Auth.readLogo(file.getName());
            Image img = image.getImage();
            ImageIcon icon = new ImageIcon(img.getScaledInstance(lblAnhPhim.getWidth(), lblAnhPhim.getHeight(), img.SCALE_SMOOTH));
            System.out.println(file.getName());
//            ImageIcon icon = Auth.readLogo(file.getName()); // đọc hình từ file
            lblAnhPhim.setText("");
            lblAnhPhim.setIcon(icon);
            lblAnhPhim.setToolTipText(file.getName()); // giữ tên hình trong tooltip
        }
    }

    private void showImage(String fileName) {
        ImageIcon icon = Auth.readLogo(fileName);
        lblAnhPhim.setIcon(icon);
        lblAnhPhim.setToolTipText(fileName);
    }

    public void setForm() {
        int row = tblPhim.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tblPhim.getModel();
        String maPhim = (String) tblPhim.getValueAt(row, 0);
        PhimEntity phim = new PhimEntity();
        try {
            phim = daoPhim.findById(maPhim);
        } catch (Exception e) {
            e.printStackTrace();
        }
        this.setModel(phim);
    }

    private void writeExcel() {
        try {
            FileOutputStream fot = new FileOutputStream("src/Excel/RapPhim_Phim.xls");
            XSSFWorkbook wb = new XSSFWorkbook();
            XSSFSheet ws = wb.createSheet("Phim");
            XSSFRow row;
            DefaultTableModel model = (DefaultTableModel) tblPhim.getModel();
            row = ws.createRow((short) 3);
            XSSFCell MaPhim = row.createCell((short) 3);
            MaPhim.setCellValue(model.getColumnName(0));
            XSSFCell TenPhim = row.createCell((short) 4);
            TenPhim.setCellValue(model.getColumnName(1));
            XSSFCell TheLoai = row.createCell((short) 5);
            TheLoai.setCellValue(model.getColumnName(2));
            XSSFCell HinhAnh = row.createCell((short) 6);
            HinhAnh.setCellValue(model.getColumnName(3));
            XSSFCell NgayMua = row.createCell((short) 7);
            NgayMua.setCellValue(model.getColumnName(4));
            XSSFCell DaoDien = row.createCell((short) 8);
            DaoDien.setCellValue(model.getColumnName(5));
            XSSFCell NamSX = row.createCell((short) 9);
            NamSX.setCellValue(model.getColumnName(6));
            XSSFCell QuocGia = row.createCell((short) 10);
            QuocGia.setCellValue(model.getColumnName(7));
            XSSFCell NgayKC = row.createCell((short) 11);
            NgayKC.setCellValue(model.getColumnName(8));
            XSSFCell NgayKT = row.createCell((short) 12);
            NgayKT.setCellValue(model.getColumnName(9));
            List<PhimEntity> list = daoPhim.select();
            int i = 3;
            for (PhimEntity ob : list) {
                row = ws.createRow((short) i + 1);
                XSSFCell cellA = row.createCell((short) 3);
                cellA.setCellValue(ob.getMaPhim());
                XSSFCell cellB = row.createCell((short) 4);
                cellB.setCellValue(ob.getTenPhim());
                XSSFCell cellC = row.createCell((short) 5);
                cellC.setCellValue(ob.getTheLoai());
                XSSFCell cellD = row.createCell((short) 6);
                cellD.setCellValue(ob.getHinhAnh());
                XSSFCell cellE = row.createCell((short) 7);
                cellE.setCellValue(ob.getNgayMua().toString());
                XSSFCell cellF = row.createCell((short) 8);
                cellF.setCellValue(ob.getDaoDien());
                XSSFCell cellG = row.createCell((short) 9);
                cellG.setCellValue(ob.getNamSX().toString());
                XSSFCell cellH = row.createCell((short) 10);
                cellH.setCellValue(ob.getQuocGia());
                XSSFCell cellI = row.createCell((short) 11);
                cellI.setCellValue(ob.getNgayKC().toString());
                XSSFCell cellj = row.createCell((short) 12);
                cellj.setCellValue(ob.getNgayKT().toString());
                i++;
            }
            wb.write(fot);
            wb.close();
            fot.close();
            MsgBox.alert(this, "Xuất file thành công");
            this.openFileExcel("src/Excel/RapPhim_Phim.xls");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex + "1");
        }
    }

//    //Form quản lý lịch chiếu
//    void setTable() {
//        jScrollPane1.setOpaque(false);
//        jScrollPane1.getViewport().setOpaque(false);
//        tbllc.setOpaque(false);
//        jLabel3.setBackground(new Color(3, 5, 5, 140));
//        jLabel7.setBackground(new Color(255, 255, 255, 20));
//        btndau.setBackground(new Color(3, 5, 5, 10));
//        btnlui.setBackground(new Color(3, 5, 5, 10));
//        btntoi.setBackground(new Color(3, 5, 5, 10));
//        btncuoi.setBackground(new Color(3, 5, 5, 10));
//    }
//    PhimDAO_TU phimDAO = new PhimDAO_TU();
//    PhongChieuDAO_TU phongDAO = new PhongChieuDAO_TU();
//    SuatChieuDAO_TU suatchieuDAO = new SuatChieuDAO_TU();
//    LichChieuDAO_TU lichchieuDAO = new LichChieuDAO_TU();
//    List<Phim_TU> listphim;
//    int rowPhim;
//
//    void fillcombobox() {
//        DefaultComboBoxModel cbxphim = (DefaultComboBoxModel) cbxtenphim.getModel();
//        cbxphim.removeAllElements();
//        listphim = phimDAO.selectAll();
//        for (Phim_TU x : listphim) {
//            cbxphim.addElement(x);
//        }
//        //
//        DefaultComboBoxModel cbxphongchieu = (DefaultComboBoxModel) this.cbxphongchieu.getModel();
//        cbxphongchieu.removeAllElements();
//        List<PhongChieu_TU> listphong = phongDAO.selectAll();
//        for (PhongChieu_TU x : listphong) {
//            cbxphongchieu.addElement(x);
//        }
//        //
//        DefaultComboBoxModel cbxcachieu = (DefaultComboBoxModel) this.cbxcachieu.getModel();
//        cbxcachieu.removeAllElements();
//        List<SuatChieu_TU> listca = suatchieuDAO.selectAll();
//        for (SuatChieu_TU x : listca) {
//            cbxcachieu.addElement(x);
//        }
//    }
//
//    void filltable() {
//        DefaultTableModel tblbang = (DefaultTableModel) tbllc.getModel();
//        tblbang.setRowCount(0);
//        try {
//            List<LichChieu_TU> list = lichchieuDAO.selectAll();
//            for (LichChieu_TU x : list) {
//                Object row[] = {x.getMaLC(), x.getNgayChieu(), x.getMaPC(), x.getMaSC()};
//                tblbang.addRow(row);
//            }
//        } catch (Exception e) {
//            System.out.println(e);
//        }
//    }
//
//    void defaultForm() {
//        cbxtenphim.setSelectedIndex(0);
//        cbxphongchieu.setSelectedIndex(0);
//        cbxcachieu.setSelectedIndex(0);
//        txtngaychieu.setText("");
//    }
//
//    LichChieu_TU getform() {
//        LichChieu_TU lc = new LichChieu_TU();
//        int q = (int) tbllc.getValueAt(row, 0);
//        lc.setMaLC(q);
//        Phim_TU phim = (Phim_TU) cbxtenphim.getSelectedItem();
//        SuatChieu_TU suatchieu = (SuatChieu_TU) cbxcachieu.getSelectedItem();
//        PhongChieu_TU phongchieu = (PhongChieu_TU) cbxphongchieu.getSelectedItem();
//        lc.setMaPhim(phim.getMaPhim());
//        if (txtngaychieu.getText().equals("")) {
//            JOptionPane.showMessageDialog(this, "Vui lòng nhập ngày");
//        } else {
//            try {
//                lc.setNgayChieu(XDate.toDate(txtngaychieu.getText(), "yyyy-MM-dd"));
//            } catch (Exception e) {
//                JOptionPane.showMessageDialog(this, "Nhập sai định dạng ngày");
//            }
//        }
//        lc.setMaPC(phongchieu.getMaPhong());
//        lc.setMaSC(suatchieu.getMaSC());
//        return lc;
//    }
//
//    void setform(int malc) {
//        View_TU vi = lichchieuDAO.Poster(malc);
//        lbltenphim.setText(vi.getTenphim());
//        lblngaychieu.setText("Ngày Chiếu Rạp : " + String.valueOf(vi.getNgaychieu()));
//        lblgiochieu.setText("Giờ chiếu : " + String.valueOf(vi.getGiobd()));
//        if (vi.getHinhanh() != null) {
//            lblanh.setToolTipText(vi.getHinhanh());
//            System.out.println(Ximage_TU.read(vi.getHinhanh()));
//            lblanh.setIcon(Ximage_TU.read(vi.getHinhanh()));
//        }
//    }
//
//    void select(int hang) {
//        int malc = (int) tbllc.getValueAt(hang, 0);
//        setform(malc);
//        tbllc.setRowSelectionInterval(hang, hang);
//    }
//
//    void clickRow() {
//        row = tbllc.getSelectedRow();
//        select(row);
//    }
//
//    void insert() {
//        LichChieu_TU lc = getform();
//        SuatChieu_TU suatchieu = (SuatChieu_TU) cbxcachieu.getSelectedItem();
//        PhongChieu_TU phongchieu = (PhongChieu_TU) cbxphongchieu.getSelectedItem();
//        String ngaychieu = txtngaychieu.getText();
//        try {
//            for (int i = 0; i <= tbllc.getRowCount() - 1; i++) {
//                String ngay = tbllc.getValueAt(i, 1).toString();
//                String phong = (String) tbllc.getValueAt(i, 2);
//                String cachieu = (String) tbllc.getValueAt(i, 3);
//                if (suatchieu.getMaSC().equals(cachieu) && ngaychieu.equals(ngay)
//                        && phongchieu.getMaPhong().equals(phong)) {
//                    JOptionPane.showMessageDialog(this, "Khoảng thời gian và địa điểm này đã có \n "
//                            + "Vui lòng thử lại !");
//                    return;
//                }
//            }
//            lichchieuDAO.insert(lc);
//            defaultForm();
//            filltable();
//            JOptionPane.showMessageDialog(this, "Thêm thành công");
//        } catch (Exception e) {
//            throw new RuntimeException(e);
//        }
//    }
//
//    void delete() {
//        row = tbllc.getSelectedRow();
//        if (row < 0) {
//            JOptionPane.showMessageDialog(this, "Vui lòng chọn mục cần xóa");
//        } else {
//            try {
//                int malc = (int) tbllc.getValueAt(row, 0);
//                int hoixoa = JOptionPane.showConfirmDialog(this, "Bạn chắc sẽ xóa không ?",
//                        "", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
//                if (hoixoa == JOptionPane.YES_OPTION) {
//                    lichchieuDAO.delete(malc);
//                    this.filltable();
//                    this.defaultForm();
//                    JOptionPane.showMessageDialog(this, "Xóa thành công !");
//                }
//            } catch (Exception e) {
//                System.out.println(e);
//            }
//        }
//    }
//
//    void update() {
//        LichChieu_TU lc = getform();
//        SuatChieu_TU suatchieu = (SuatChieu_TU) cbxcachieu.getSelectedItem();
//        PhongChieu_TU phongchieu = (PhongChieu_TU) cbxphongchieu.getSelectedItem();
//        String ngaychieu = txtngaychieu.getText();
//        if (row < 0) {
//            JOptionPane.showMessageDialog(this, "Vui lòng chọn mục cần sửa");
//        } else {
//            try {
//                for (int i = 0; i <= tbllc.getRowCount() - 1; i++) {
//                    String ngay = tbllc.getValueAt(i, 1).toString();
//                    String phong = (String) tbllc.getValueAt(i, 2);
//                    String cachieu = (String) tbllc.getValueAt(i, 3);
//                    if (suatchieu.getMaSC().equals(cachieu) && ngaychieu.equals(ngay)
//                            && phongchieu.getMaPhong().equals(phong)) {
//                        JOptionPane.showMessageDialog(this, "Khoảng thời gian và địa điểm này đã có \n "
//                                + "Vui lòng thử lại !");
//                        return;
//                    }
//                }
//                lichchieuDAO.update(lc);
//                defaultForm();
//                filltable();
//                JOptionPane.showMessageDialog(this, "Sửa thành công");
//            } catch (Exception e) {
//                throw new RuntimeException(e);
//            }
//        }
//    }
//
//    private void dau() {
//        row = 0;
//        select(row);
//        tbllc.setRowSelectionInterval(row, row);
//    }
//
//    private void lui() {
//        if (row > 0) {
//            row--;
//            select(row);
//        } else {
//            return;
//        }
//    }
//
//    private void toi() {
//        if (row < tbllc.getRowCount() - 1) {
//            row++;
//            select(row);
//            tbllc.setRowSelectionInterval(row, row);
//        } else {
//            return;
//        }
//
//    }
//
//    private void cuoi() {
//        row = tbllc.getRowCount() - 1;
//        select(row);
//        tbllc.setRowSelectionInterval(row, row);
//    }
    //Form Quản lý vé
    void initQLVE() {
        this.fillTableVe();
    }
    VeDAO vedao = new VeDAO();// làm việc vs bảng vé
    int row1 = -1;// hàng đc chọn hiện tại trên bảng

    void fillTableVe() { // đổ dữ liệu vào table Ve
        DefaultTableModel model = (DefaultTableModel) tblVe.getModel();
        model.setRowCount(0); // xóa tất cả các hàng trên JTable
        try {
            String keyword = txtSearch.getText();
            List<Ve1> list = vedao.selectByKeyword(keyword);// đọc dữ liệu từ CSDL
            for (Ve1 v : list) {
                Object[] row1 = {
                    v.getMaVe(),
                    v.getGiaVe(),
                    v.getNgayMua(),
                    v.getMaGhe(),
                    v.getMaKH(),
                    v.getMaNV_TaiKhoan(),
                    v.getMaLC(),
                    v.getMaPhim()
                };
                model.addRow(row1);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
            e.printStackTrace();
        }
    }

    void updateQLVe() {
        // btnUpdate
        try {
            int n = tblVe.getRowCount();
            for (int i = 0; i < n; i++) {
                int MaVe = (Integer) tblVe.getValueAt(i, 0);
                Ve1 v = vedao.selectById(MaVe);
                v.setGiaVe(Integer.parseInt((String) tblVe.getValueAt(i, 1)));
                vedao.update(v);
                MsgBox.alert(this, "Cập nhật Vé thành công!");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    void deleteQLVe() {
        try {
            int[] rows = tblVe.getSelectedRows();
            if (rows.length > 0
                    && MsgBox.confirm(this, "Bạn muốn xóa vé này? ")) {
                for (int row : rows) {
                    int mave = (Integer) tblVe.getValueAt(row, 0);
                    vedao.delete(mave);
                }
                this.fillTableVe();
                MsgBox.alert(this, "Xóa vé thành công!");
            }

        } catch (Exception e) {
            MsgBox.alert(this, "Xóa vé thất bại!");
            e.printStackTrace();
        }

    }

    private void xuatFile() {
        try {
            HSSFWorkbook workbook = new HSSFWorkbook();
            HSSFSheet sheet = workbook.createSheet("Vé");

            HSSFRow rows = null;// tạo hàng
            Cell cell = null;

            HSSFCellStyle style = workbook.createCellStyle();
            style.setBorderBottom(BorderStyle.THIN);
            style.setBottomBorderColor(IndexedColors.BLACK.getIndex());
//              Set left
            style.setBorderLeft(BorderStyle.THIN);
            style.setLeftBorderColor(IndexedColors.BLACK.getIndex());

//              Set right
            style.setBorderRight(BorderStyle.THIN);
            style.setRightBorderColor(IndexedColors.BLACK.getIndex());

//              Set top
            style.setBorderTop(BorderStyle.THIN);
            style.setTopBorderColor(IndexedColors.BLACK.getIndex());

            HSSFCellStyle center = workbook.createCellStyle();
            center.setAlignment(HorizontalAlignment.CENTER);
            center.setVerticalAlignment(VerticalAlignment.CENTER);
            center.setBorderBottom(BorderStyle.THIN);
            center.setBottomBorderColor(IndexedColors.BLACK.getIndex());
//              Set left
            center.setBorderLeft(BorderStyle.THIN);
            center.setLeftBorderColor(IndexedColors.BLACK.getIndex());

//              Set right
            center.setBorderRight(BorderStyle.THIN);
            center.setRightBorderColor(IndexedColors.BLACK.getIndex());

//              Set top
            center.setBorderTop(BorderStyle.THIN);
            center.setTopBorderColor(IndexedColors.BLACK.getIndex());

            rows = sheet.createRow(3);// cách 3 dòng

            cell = rows.createCell(0, CellType.STRING);
            cell.setCellValue("STT");
            cell.setCellStyle(center);

            cell = rows.createCell(1, CellType.STRING);
            cell.setCellValue("Mã Vé");
            cell.setCellStyle(center);

            cell = rows.createCell(2, CellType.STRING);
            cell.setCellValue("Gía Vé");
            cell.setCellStyle(center);

            cell = rows.createCell(3, CellType.STRING);
            cell.setCellValue("Mã Ghế");
            cell.setCellStyle(center);

            cell = rows.createCell(4, CellType.STRING);
            cell.setCellValue("Mã KH");
            cell.setCellStyle(center);

            cell = rows.createCell(5, CellType.STRING);
            cell.setCellValue("Mã NV");
            cell.setCellStyle(center);

            cell = rows.createCell(6, CellType.STRING);
            cell.setCellValue("Mã LC");
            cell.setCellStyle(center);

            cell = rows.createCell(7, CellType.STRING);
            cell.setCellValue("Mã Phim");
            cell.setCellStyle(center);

            List<Ve1> listItem = vedao.selectAll();
            if (listItem != null) {
                int s = listItem.size();
                for (int i = 0; i < s; i++) {
                    Ve1 ve = listItem.get(i);
                    rows = sheet.createRow(4 + i);

                    cell = rows.createCell(0, CellType.NUMERIC);
                    cell.setCellValue(i + 1);
                    cell.setCellStyle(style);

                    cell = rows.createCell(1, CellType.STRING);
                    cell.setCellValue(ve.getMaVe());
                    cell.setCellStyle(style);

                    cell = rows.createCell(2, CellType.STRING);
                    cell.setCellValue(ve.getGiaVe());
                    cell.setCellStyle(style);

                    cell = rows.createCell(3, CellType.STRING);
                    cell.setCellValue(ve.getMaGhe());
                    cell.setCellStyle(style);

                    cell = rows.createCell(4, CellType.STRING);
                    cell.setCellValue(ve.getMaKH());
                    cell.setCellStyle(style);

                    cell = rows.createCell(5, CellType.STRING);
                    cell.setCellValue(ve.getMaNV_TaiKhoan());
                    cell.setCellStyle(style);

                    cell = rows.createCell(6, CellType.STRING);
                    cell.setCellValue(ve.getMaLC());
                    cell.setCellStyle(style);

                    cell = rows.createCell(7, CellType.STRING);
                    cell.setCellValue(ve.getMaPhim());
                    cell.setCellStyle(style);
                }

                //save fill
                File f = new File("Ve.xls");
                FileOutputStream fis = new FileOutputStream(f);
                workbook.write(fis);
                MsgBox.alert(this, "Xuất file thành công");
                System.out.println("Export Excel Succesfull");
                fis.close();
                openFileExcel("Ve.xls");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void openFileExcel(String name) {
        try {
            File excelFile = new File(name);
            if (excelFile.exists()) {
                if (Desktop.isDesktopSupported()) {
                    Desktop.getDesktop().open(excelFile);
                } else {
                    System.out.println("Awt Desktop is not supported!");
                }
            } else {
                System.out.println("File is not exists!");
            }
            System.out.println("Done");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
